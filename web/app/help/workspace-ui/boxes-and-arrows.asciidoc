## Boxes and arrows

Workspaces allow users to describe complex computation flows visually by creating workflows
represented by boxes and arrows. Boxes represent operations and they are connected by
arrows. The sequence of operations applied to the data is shown on a path
determined by the arrows.

After creating a new workspace, the viewport is empty, except for the <<Anchor>> located in the left
corner. The anchor can be used to explain the overall purpose of the workspace. You can add a
description, an image and set parameters (more details: <<Parametric parameters>>). The URL to an
image is useful when you want to reuse the workflow as a custom box in another workspace: in that
case the image will serve as the custom box's icon. Preferably this should be a link to a local
image, like `images/icons/anchor.png`.

You can add a box to the workspace by dragging an operation from <<The operation toolbox>>. Clicking
on the box opens its <<Box parameters popup>>, which allows you to set the parameters.

A box can have: inputs (on its left) and outputs (on its right).
A box will indicate the number of boxes that can be connected to
it and the type of the required input or output (for example: graph, table).

You can add arrows to the viewport by connecting the boxes. Boxes can be connected two ways:

* Automatically, by hovering the input of one box over the output of another.
* Manually, by clicking on the output of one box, then dragging the arrow to the input of another.

When two boxes are connected, the computation of the selected operation starts. The color of the
output will indicate the status:

* Red: error, something's wrong
* Blue: not yet computed
* Yellow: currently computing
* Green: computed

Clicking on the output of a box will open <<State popups>>.


### Tips & tricks

Instead of clicking on the search bar, you can use the `/` button. After finding the coveted box,
you can press `Enter` to place the box under your mouse. You can place multiple boxes without leaving
the search bar.

Boxes and connected box sequences can be copy-pasted, even to different workspaces and LynxKite
instances. A limitation here is that the custom boxes are not copied, so they have to be present
on the target instance too.

The copy-paste mechanism is implemented via serializing to YAML, a human-readable and editable
textual format, so you can even save box sequences to text files or share them via email. Such
a YAML-file (if it has a `.yaml` extension) can also simply be drag-and-dropped into a LynxKite workspace.

Hold SHIFT while moving a box to align it to a grid.
