### Compute centrality

Calculates a centrality metric for every vertex. Higher centrality means that
the vertex is more embedded in the graph. Multiple different centrality measures have been defined
in the literature. You can choose the specific centrality measure as a parameter to this operation.

====
[p-name]#Attribute name#::
The new attribute will be created under this name.

[p-algorithm]#The centrality algorithm to use#::
- The https://en.wikipedia.org/wiki/Centrality#Harmonic_centrality[**harmonic centrality**]
  of the vertex A is the sum of the reciprocals of all shortest paths to A.
- https://www.centiserver.org/?q1=centrality&q2=Lin_Centrality[**Lin's centrality**]
  of the vertex A is the square of the size of its coreachable set divided by
  the sum of the shortest paths to A.
- **Average distance**
  (or https://en.wikipedia.org/wiki/Centrality#Closeness_centrality[closeness centrality])
  of the vertex A is the sum of the shortest paths to A divided by the size of its coreachable set.
- The https://en.wikipedia.org/wiki/Betweenness_centrality[**betweenness centrality**]
  is the number of shortest paths that pass through the vertex.
- The https://en.wikipedia.org/wiki/Eigenvector_centrality[**eigenvector centrality**]
  is the non-negative eigenvector of the adjacency matrix.
- The https://en.wikipedia.org/wiki/Closeness_centrality#In_disconnected_graphs[**harmonic closeness centrality**]
  is the sum of the closeness (1 / distance) to all other vertices in the graph.
- The https://en.wikipedia.org/wiki/Katz_centrality[**Katz centrality**]
  is based on the total number of walks between vertices.
- The https://www.researchgate.net/publication/228989783_K-Path_Centrality_A_New_Centrality_Measure_in_Social_Networks[**k-path centrality**]
  is a fast approximation of the betweenness centrality.
- **Sfigality** is the ratio of neighbors that have a higher degree.

[p-direction]#Direction#::
 - `incoming edges`: Calculating paths _from_ vertices.
 - `outgoing edges`: Calculating paths _to_ vertices.
 - `all edges`: Calculating paths to both directions - effectively on an undirected graph.

[p-maxdiameter]#Maximal diameter to check#::
Some algorithms (harmonic, Lin, and average distance)
work by counting the shortest paths up to a certain length in each iteration.
This parameter sets the maximal length to check, so it has a strong influence over the run
time of the operation.
+
A setting lower than the actual diameter of the graph can theoretically introduce unbounded error
to the results. In typical small world graphs this effect may be acceptable, however.

[p-bits]#The precision of the algorithm#::
Some centrality algorithms (harmonic, Lin, and average distance) are approximations.
This parameter sets the trade-off between
the quality of the approximation and the memory and time consumption of the algorithm.
In most cases the default value is good enough. On very large graphs it may help to use
a lower number in order to speed up the algorithm or meet memory constraints.
====
