### Import Neo4j

Import data from an existing Neo4j database. The connection can be configured through the following
variables in the .kiterc file:

* `NEO4J_URI`: URI to connect to Neo4j, only bolt protocol is supported. The URI has to follow the
   `bolt://<host>:<port>` structure.
* `NEO4J_PASSWORD`: Password to connect to Neo4j. You can leave it empty in case no password is required
* `NEO4J_USER`: User used to connect to Neo4j

In case you want to change the values of the variables, you will have to restart LynxKite for the
changes to take effect.

====
[p-node_label]#Node label#::
The label for the type of node that you want to import from Neo4j. All the nodes with that label will be
imported as a table, with each property as a column. You can specify the properties to import using the
`Columns to import` parameter. The id ( `id()` function of Neo4j) of the node will be automatically included
in the import as the special variable `id$`.
Only one of node label or relationship type can be specified.

[p-relationship_type]#Relationship type#::
The type of the relationship that you want to import from Neo4j. The relationship will be imported
as a table, with each property as a column. You can specify the properties to import using the
`Columns to import` parameter.
If you want to import properties from the source or the destination (target) nodes you can do it
by adding the prefix `source_` or `target_` to the property. The id ( `id()` function of Neo4j) of
both the source and the destination nodes, will be automatically included in the import as the special
variables `source_id$` and `target_id$`.
Only one of node label or relationship type can be specified.

[p-num_partitions]#Number of partitions#::
LynxKite will perform this many queries in parallel to get the data. Leave at zero to let
LynxKite automatically decide. Set a specific value if you want to control the level of
parallelism.

[p-infer]#Infer types#::
Automatically tries to cast data types from Neo4j. For example a column full of numbers will become a
`number`. If disabled, all columns are imported as ``String``. It is recommended to set this to false,
as Neo4j types do not integrate very well with Spark (Eg. Date types from Neo4j are not supported).

include::{g}[tag=import-box]
====
