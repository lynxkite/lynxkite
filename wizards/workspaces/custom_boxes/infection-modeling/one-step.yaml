- id: anchor
  inputs: {}
  operationId: Anchor
  parameters:
    parameters: >-
      [{"id": "seed", "kind": "text", "defaultValue": ""}, {"id": "day", "kind": "text",
      "defaultValue": ""}]
  parametricParameters: {}
  x: 0.0
  y: 0.0
- id: deriveVertexAttribute_0
  inputs:
    graph:
      boxId: deriveVertexAttribute_1
      id: graph
  operationId: Derive vertex attribute
  parameters:
    defined_attrs: 'false'
    output: infection_day
  parametricParameters:
    expr: |-
      val today: Option[Double] = if (infected.get > 0) Some($day) else None
      infection_day.orElse(today)
  x: 1200.0
  y: 450.0
- id: fillVertexAttributesWithConstantDefaultValues_0
  inputs:
    graph:
      boxId: aggregateOnNeighbors_0
      id: graph
  operationId: Fill vertex attributes with constant default values
  parameters:
    fill_neighborhood_infectious_sum: '0'
  parametricParameters: {}
  x: 650.0
  y: 750.0
- id: aggregateOnNeighbors_0
  inputs:
    graph:
      boxId: deriveVertexAttribute_2
      id: graph
  operationId: Aggregate on neighbors
  parameters:
    aggregate_infectious: sum
    direction: all neighbors
  parametricParameters: {}
  x: 350.0
  y: 750.0
- id: input_0
  inputs: {}
  operationId: Input
  parameters:
    name: input_graph
  parametricParameters: {}
  x: 150.0
  y: 150.0
- id: deriveVertexAttribute_1
  inputs:
    graph:
      boxId: addRandomVertexAttribute_0
      id: graph
  operationId: Derive vertex attribute
  parameters:
    expr: |-
      val p = 1.0 - Math.pow(0.9, neighborhood_infectious_sum)
      Math.max(infected, if (infection_random < p) 1 else 0)
    output: infected
  parametricParameters: {}
  x: 650.0
  y: 1050.0
- id: deriveVertexAttribute_3
  inputs:
    graph:
      boxId: addRandomVertexAttribute_1
      id: graph
  operationId: Derive vertex attribute
  parameters:
    expr: Math.max(cured, if (cured_random < 0.1) infected else 0)
    output: cured
  parametricParameters: {}
  x: 650.0
  y: 150.0
- id: deriveVertexAttribute_2
  inputs:
    graph:
      boxId: deriveVertexAttribute_3
      id: graph
  operationId: Derive vertex attribute
  parameters:
    expr: infected - cured
    output: infectious
  parametricParameters: {}
  x: 350.0
  y: 450.0
- id: addRandomVertexAttribute_1
  inputs:
    graph:
      boxId: input_0
      id: input
  operationId: Add random vertex attribute
  parameters:
    dist: Standard Uniform
    name: cured_random
  parametricParameters:
    seed: ${11223344 + seed.toInt}
  x: 350.0
  y: 150.0
- id: addRandomVertexAttribute_0
  inputs:
    graph:
      boxId: fillVertexAttributesWithConstantDefaultValues_0
      id: graph
  operationId: Add random vertex attribute
  parameters:
    dist: Standard Uniform
    name: infect_random
  parametricParameters:
    seed: ${665544 + seed.toInt}
  x: 350.0
  y: 1050.0
- id: output_0
  inputs:
    output:
      boxId: deriveVertexAttribute_0
      id: graph
  operationId: Output
  parameters:
    name: output
  parametricParameters: {}
  x: 1650.0
  y: 450.0
- id: Comment_1
  inputs: {}
  operationId: Comment
  parameters:
    comment: 10% of the infected get cured!
  parametricParameters: {}
  x: 350.0
  y: 50.0
- id: Comment_2
  inputs: {}
  operationId: Comment
  parameters:
    comment: >-
      Someone is infectious if infected, but not cured. (No incubation period in this
      model.)
  parametricParameters: {}
  x: 350.0
  y: 350.0
- id: Comment_3
  inputs: {}
  operationId: Comment
  parameters:
    comment: >-
      We count the number of infectious neighbors for all vertices.
  parametricParameters: {}
  x: 350.0
  y: 650.0
- id: Comment_4
  inputs: {}
  operationId: Comment
  parameters:
    comment: >-
      Each infectious connection infects you with 10% probability. These events are
      considered independent. You are infected if at least one infection happens.
  parametricParameters: {}
  x: 350.0
  y: 900.0
- id: Comment_5
  inputs: {}
  operationId: Comment
  parameters:
    comment: We set infection day for newly infected vertices.
  parametricParameters: {}
  x: 1200.0
  y: 350.0
